---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: proxy-azuread
spec:
  entryPoints: # We listen to requests coming from ports 80 and 443
    - websecure
  routes:
    - match: (Host(`jupyterhub.cs.mtsu.edu`) && PathPrefix(`/azuread`))
      kind: Rule
      services:
        - name: https-service-jupyterhub # Requests will be forwarded to this service
          port: 443
          scheme: https
          passHostHeader: true
          serversTransport: jupyterhub-proxy-transport
      middlewares:
        - name: production-rate-limit
        - name: production-security
  tls:
    secretName: jupyterhub-tls
    options:
      name: jupyterhub-proxy-tlsoptions
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: proxy-codeserver
spec:
  entryPoints: # We listen to requests coming from ports 80 and 443
    - websecure
  routes:
    - match: (Host(`jupyterhub.cs.mtsu.edu`) && PathPrefix(`/codeserver`))
      kind: Rule
      services:
        - name: https-service-jupyterhub # Requests will be forwarded to this service
          port: 443
          scheme: https
          passHostHeader: true
          serversTransport: jupyterhub-proxy-transport
      middlewares:
        - name: production-rate-limit
        - name: production-security
  tls:
    secretName: jupyterhub-tls
    options:
      name: jupyterhub-proxy-tlsoptions
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: proxy-biosim
spec:
  entryPoints: # We listen to requests coming from ports 80 and 443
    - websecure
  routes:
    - match: (Host(`jupyterhub.cs.mtsu.edu`) && PathPrefix(`/biosim`))
      kind: Rule
      services:
        - name: https-service-biosim # Requests will be forwarded to this service
          port: 443
          scheme: https
          passHostHeader: true
          serversTransport: jupyterhub-proxy-transport
      middlewares:
        - name: production-rate-limit
        - name: production-security
  tls:
    secretName: jupyterhub-tls
    options:
      name: jupyterhub-proxy-tlsoptions
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: proxy-phillips-lab
spec:
  entryPoints: # We listen to requests coming from ports 80 and 443
    - websecure
  routes:
    - match: (Host(`jupyterhub.cs.mtsu.edu`) && PathPrefix(`/phillips-lab`))
      kind: Rule
      services:
        - name: https-service-biosim # Requests will be forwarded to this service
          port: 443
          scheme: https
          passHostHeader: true
          serversTransport: jupyterhub-proxy-transport
      middlewares:
        - name: production-rate-limit
        - name: production-security
  tls:
    secretName: jupyterhub-tls
    options:
      name: jupyterhub-proxy-tlsoptions
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: proxy-raziel
spec:
  entryPoints: # We listen to requests coming from ports 80 and 443
    - websecure
  routes:
    - match: (Host(`jupyterhub.cs.mtsu.edu`) && PathPrefix(`/raziel`))
      kind: Rule
      services:
        - name: https-service-raziel # Requests will be forwarded to this service
          port: 443
          scheme: https
          passHostHeader: true
          serversTransport: jupyterhub-proxy-transport
      middlewares:
        - name: production-rate-limit
        - name: production-security
  tls:
    secretName: jupyterhub-tls
    options:
      name: jupyterhub-proxy-tlsoptions
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: proxy-prism-rol
spec:
  entryPoints: # We listen to requests coming from ports 80 and 443
    - websecure
  routes:
    - match: (Host(`jupyterhub.cs.mtsu.edu`) && PathPrefix(`/prism-rol`))
      kind: Rule
      services:
        - name: https-service-raziel # Requests will be forwarded to this service
          port: 443
          scheme: https
          passHostHeader: true
          serversTransport: jupyterhub-proxy-transport
      middlewares:
        - name: production-rate-limit
        - name: production-security
  tls:
    secretName: jupyterhub-tls
    options:
      name: jupyterhub-proxy-tlsoptions
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: proxy-sainju
spec:
  entryPoints: # We listen to requests coming from ports 80 and 443
    - websecure
  routes:
    - match: (Host(`jupyterhub.cs.mtsu.edu`) && PathPrefix(`/sainju`))
      kind: Rule
      services:
        - name: https-service-sainju # Requests will be forwarded to this service
          port: 443
          scheme: https
          passHostHeader: true
          serversTransport: jupyterhub-proxy-transport
      middlewares:
        - name: production-rate-limit
        - name: production-security
  tls:
    secretName: jupyterhub-tls
    options:
      name: jupyterhub-proxy-tlsoptions
